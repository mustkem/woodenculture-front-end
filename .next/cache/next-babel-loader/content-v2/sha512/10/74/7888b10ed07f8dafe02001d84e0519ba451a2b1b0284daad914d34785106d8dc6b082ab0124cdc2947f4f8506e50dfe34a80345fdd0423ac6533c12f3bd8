{"ast":null,"code":"import _defineProperty from \"/home/mustkeem/Documents/My Projects/all-projects/woodenculture/frontend/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { combineReducers } from \"redux\";\nimport * as types from \"./types\";\nvar initialState = {\n  fetchProducts: {\n    data: null,\n    loading: false,\n    error: null\n  }\n};\n\nvar fetchProducts = function fetchProducts() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState.fetchProducts;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case types.FETCH_PRODUCTS:\n      {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          loading: true,\n          data: null,\n          error: null\n        });\n      }\n\n    case types.FETCH_PRODUCTS_SUCCESS:\n      {\n        // console.log(\"222222222222222222222222\", action.payload);\n        return _objectSpread(_objectSpread({}, state), {}, {\n          loading: false,\n          data: action.payload\n        });\n      }\n\n    case types.FETCH_PRODUCTS_FAILED:\n      {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          loading: false,\n          error: action.error\n        });\n      }\n\n    case types.FETCH_PRODUCTS_CLEAR:\n      {\n        return _objectSpread({}, initialState.fetchProducts);\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport var productsReducer = combineReducers({\n  fetchProducts: fetchProducts\n});","map":null,"metadata":{},"sourceType":"module"}