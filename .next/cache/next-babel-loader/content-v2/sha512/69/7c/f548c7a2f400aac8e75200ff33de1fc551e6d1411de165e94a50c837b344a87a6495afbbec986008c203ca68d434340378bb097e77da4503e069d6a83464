{"ast":null,"code":"import _defineProperty from \"/home/mustkeem/Documents/My Projects/all-projects/woodenculture/frontend/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _toConsumableArray from \"/home/mustkeem/Documents/My Projects/all-projects/woodenculture/frontend/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { createStore, applyMiddleware } from \"redux\";\nimport { HYDRATE, createWrapper } from \"next-redux-wrapper\";\nimport createSagaMiddleware from \"redux-saga\";\nimport rootReducer from \"./reducers\";\nimport rootSaga from \"./sagas\";\n\nvar bindMiddleware = function bindMiddleware(middleware) {\n  if (true) {\n    var _require = require(\"redux-devtools-extension\"),\n        composeWithDevTools = _require.composeWithDevTools;\n\n    return composeWithDevTools(applyMiddleware.apply(void 0, _toConsumableArray(middleware)));\n  }\n\n  return applyMiddleware.apply(void 0, _toConsumableArray(middleware));\n};\n\nvar reducer = function reducer(state, action) {\n  if (action.type === HYDRATE) {\n    var nextState = _objectSpread(_objectSpread({}, state), action.payload);\n\n    return nextState;\n  } else {\n    return rootReducer(state, action);\n  }\n}; // create the saga middleware\n\n\nvar sagaMiddleware = createSagaMiddleware();\n\nvar initStore = function initStore() {\n  var store = createStore(reducer, bindMiddleware([sagaMiddleware])); // then run the saga\n\n  sagaMiddleware.run(rootSaga);\n  return store;\n};\n\nexport default initStore;","map":{"version":3,"sources":["/home/mustkeem/Documents/My Projects/all-projects/woodenculture/frontend/store/store.js"],"names":["createStore","applyMiddleware","HYDRATE","createWrapper","createSagaMiddleware","rootReducer","rootSaga","bindMiddleware","middleware","require","composeWithDevTools","reducer","state","action","type","nextState","payload","sagaMiddleware","initStore","store","run"],"mappings":";;;;;;;AAAA,SAASA,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C;AACA,SAASC,OAAT,EAAkBC,aAAlB,QAAuC,oBAAvC;AAEA,OAAOC,oBAAP,MAAiC,YAAjC;AAEA,OAAOC,WAAP,MAAwB,YAAxB;AACA,OAAOC,QAAP,MAAqB,SAArB;;AAEA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAACC,UAAD,EAAgB;AACrC,YAA2C;AAAA,mBACTC,OAAO,CAAC,0BAAD,CADE;AAAA,QACjCC,mBADiC,YACjCA,mBADiC;;AAEzC,WAAOA,mBAAmB,CAACT,eAAe,MAAf,4BAAmBO,UAAnB,EAAD,CAA1B;AACD;;AACD,SAAOP,eAAe,MAAf,4BAAmBO,UAAnB,EAAP;AACD,CAND;;AAQA,IAAMG,OAAO,GAAG,SAAVA,OAAU,CAACC,KAAD,EAAQC,MAAR,EAAmB;AACjC,MAAIA,MAAM,CAACC,IAAP,KAAgBZ,OAApB,EAA6B;AAC3B,QAAMa,SAAS,mCACVH,KADU,GAEVC,MAAM,CAACG,OAFG,CAAf;;AAIA,WAAOD,SAAP;AACD,GAND,MAMO;AACL,WAAOV,WAAW,CAACO,KAAD,EAAQC,MAAR,CAAlB;AACD;AACF,CAVD,C,CAYA;;;AACA,IAAMI,cAAc,GAAGb,oBAAoB,EAA3C;;AAEA,IAAMc,SAAS,GAAG,SAAZA,SAAY,GAAM;AACtB,MAAMC,KAAK,GAAGnB,WAAW,CAACW,OAAD,EAAUJ,cAAc,CAAC,CAACU,cAAD,CAAD,CAAxB,CAAzB,CADsB,CAEtB;;AACAA,EAAAA,cAAc,CAACG,GAAf,CAAmBd,QAAnB;AACA,SAAOa,KAAP;AACD,CALD;;AAOA,eAAeD,SAAf","sourcesContent":["import { createStore, applyMiddleware } from \"redux\";\r\nimport { HYDRATE, createWrapper } from \"next-redux-wrapper\";\r\n\r\nimport createSagaMiddleware from \"redux-saga\";\r\n\r\nimport rootReducer from \"./reducers\";\r\nimport rootSaga from \"./sagas\";\r\n\r\nconst bindMiddleware = (middleware) => {\r\n  if (process.env.NODE_ENV !== \"production\") {\r\n    const { composeWithDevTools } = require(\"redux-devtools-extension\");\r\n    return composeWithDevTools(applyMiddleware(...middleware));\r\n  }\r\n  return applyMiddleware(...middleware);\r\n};\r\n\r\nconst reducer = (state, action) => {\r\n  if (action.type === HYDRATE) {\r\n    const nextState = {\r\n      ...state, // use previous state\r\n      ...action.payload, // apply delta from hydration\r\n    };\r\n    return nextState;\r\n  } else {\r\n    return rootReducer(state, action);\r\n  }\r\n};\r\n\r\n// create the saga middleware\r\nconst sagaMiddleware = createSagaMiddleware();\r\n\r\nconst initStore = () => {\r\n  const store = createStore(reducer, bindMiddleware([sagaMiddleware]));\r\n  // then run the saga\r\n  sagaMiddleware.run(rootSaga);\r\n  return store;\r\n};\r\n\r\nexport default initStore;\r\n"]},"metadata":{},"sourceType":"module"}