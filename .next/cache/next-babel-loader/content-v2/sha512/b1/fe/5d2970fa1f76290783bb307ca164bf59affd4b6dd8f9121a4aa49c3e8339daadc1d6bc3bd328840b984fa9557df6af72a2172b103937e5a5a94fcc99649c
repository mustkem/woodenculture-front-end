{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useState, useEffect, useRef } from \"react\";\nimport Container from \"react-bootstrap/Container\";\nimport { Modal, Button, Form } from \"react-bootstrap\";\nimport { connect } from \"react-redux\";\nimport { commonActions } from \"../../../../store/common\";\nimport { CgProfile } from \"react-icons/cg\";\nimport { IoIosCall } from \"react-icons/io\";\nimport Login from \"../../../Login\";\nimport QueryModel from \"../../../Common/QueryModel\";\n\nfunction SecondaryHeader(props) {\n  var _props$signupData2, _props$signupData2$da;\n\n  console.log(\"test5\", props.isLogedIn);\n  const myProfileRef = useRef(null);\n  const {\n    0: show,\n    1: setShow\n  } = useState(false);\n  const [bookNowModel, setBookNowModel] = React.useState(false);\n  const {\n    0: shouldShowLoginForm,\n    1: setShouldShowLoginForm\n  } = useState(true);\n  const {\n    0: formDataLogin,\n    1: setFormData\n  } = useState({\n    phone_num: \"\",\n    password: \"\"\n  });\n  const {\n    0: signUpFormData,\n    1: setSignUpFormData\n  } = useState({\n    phone_num: \"\",\n    password: \"\",\n    name: \"\"\n  });\n\n  const handleClose = () => setShow(false);\n\n  const handleShow = () => {\n    props.setLoginModel(true);\n    document.querySelectorAll(\".sub-dropdown\").forEach(node => {\n      node.style.display = \"none\";\n    });\n  };\n\n  const handleChangeLogin = (key, e) => {\n    const updatedFormData = _objectSpread({}, formDataLogin);\n\n    updatedFormData[key] = e.target.value;\n    setFormData(updatedFormData);\n  };\n\n  const handleChangeSignup = (key, e) => {\n    const updatedSignUpFormData = _objectSpread({}, signUpFormData);\n\n    updatedSignUpFormData[key] = e.target.value;\n    setSignUpFormData(updatedSignUpFormData);\n  };\n\n  const handleSubmitLogin = e => {\n    e.preventDefault();\n    props.login({\n      phone_num: formDataLogin.phone_num,\n      password: formDataLogin.password\n    });\n  };\n\n  const handleSubmitSignup = e => {\n    e.preventDefault();\n    props.signup({\n      phone_num: signUpFormData.phone_num,\n      password: signUpFormData.password,\n      name: signUpFormData.name\n    });\n  };\n\n  useEffect(() => {\n    var _props$signupData, _props$signupData$dat;\n\n    if ((_props$signupData = props.signupData) !== null && _props$signupData !== void 0 && (_props$signupData$dat = _props$signupData.data) !== null && _props$signupData$dat !== void 0 && _props$signupData$dat.status) {\n      setShouldShowLoginForm(true);\n    }\n  }, [(_props$signupData2 = props.signupData) === null || _props$signupData2 === void 0 ? void 0 : (_props$signupData2$da = _props$signupData2.data) === null || _props$signupData2$da === void 0 ? void 0 : _props$signupData2$da.status]);\n\n  const handleClickOutside = event => {\n    if (myProfileRef.current && !myProfileRef.current.contains(event.target)) {\n      document.querySelectorAll(\".sub-dropdown\").forEach(node => {\n        node.style.display = \"none\";\n      });\n    }\n  };\n\n  useEffect(() => {\n    document.addEventListener(\"click\", handleClickOutside, true);\n    return () => {\n      document.removeEventListener(\"click\", handleClickOutside, true);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxs(\"div\", {\n    className: \"secondary-strip\",\n    children: [/*#__PURE__*/_jsxs(Container, {\n      children: [/*#__PURE__*/_jsxs(\"div\", {\n        className: \"content\",\n        children: [/*#__PURE__*/_jsx(\"p\", {\n          children: \"Wooden Art that speaks for you\"\n        }), /*#__PURE__*/_jsxs(\"ul\", {\n          className: \"navbar-secondary\",\n          children: [/*#__PURE__*/_jsx(\"li\", {\n            children: /*#__PURE__*/_jsxs(\"button\", {\n              onClick: () => {\n                setBookNowModel(true);\n              },\n              className: \"bt-primary\",\n              children: [/*#__PURE__*/_jsx(\"i\", {\n                className: \"call\",\n                children: /*#__PURE__*/_jsx(IoIosCall, {})\n              }), \"Get a Callback\"]\n            })\n          }), /*#__PURE__*/_jsx(\"li\", {\n            children: props.isLogedIn ? /*#__PURE__*/_jsxs(\"div\", {\n              ref: myProfileRef,\n              className: \"profile-icon-sec\",\n              children: [/*#__PURE__*/_jsx(CgProfile, {\n                onClick: () => {\n                  document.querySelectorAll(\".sub-dropdown\").forEach(node => {\n                    if (!node.style.display || node.style.display === \"none\") {\n                      node.style.display = \"block\";\n                    } else {\n                      node.style.display = \"none\";\n                    }\n                  });\n                },\n                className: \"nav-item sub-dropdown-parent profile-icon\"\n              }), /*#__PURE__*/_jsxs(\"ul\", {\n                className: \"sub-dropdown\",\n                children: [/*#__PURE__*/_jsx(\"li\", {\n                  className: \"nav-item\",\n                  children: /*#__PURE__*/_jsx(\"a\", {\n                    onClick: () => {\n                      document.querySelectorAll(\".sub-dropdown\").forEach(node => {\n                        node.style.display = \"none\";\n                      });\n                    },\n                    class: \"nav-link-sub\",\n                    to: `/`,\n                    children: \"My Profile\"\n                  })\n                }), /*#__PURE__*/_jsx(\"li\", {\n                  className: \"nav-item\",\n                  children: /*#__PURE__*/_jsx(\"button\", {\n                    className: \"bt-primary\",\n                    children: /*#__PURE__*/_jsx(\"a\", {\n                      href: \"/wishlist\",\n                      children: \"My Wishlist\"\n                    })\n                  })\n                }), /*#__PURE__*/_jsx(\"li\", {\n                  className: \"nav-item\",\n                  children: /*#__PURE__*/_jsx(\"button\", {\n                    onClick: () => {\n                      localStorage.removeItem(\"woodenculture-token\");\n                      history.replace(\"/\");\n                      history.go(0);\n                    },\n                    className: \"bt-primary\",\n                    children: \"Logout\"\n                  })\n                })]\n              })]\n            }) : /*#__PURE__*/_jsx(\"button\", {\n              onClick: handleShow,\n              className: \"bt-primary\",\n              children: \"Login\"\n            })\n          })]\n        })]\n      }), /*#__PURE__*/_jsx(QueryModel, {\n        show: bookNowModel,\n        setShow: setBookNowModel,\n        type: \"Callback\"\n      })]\n    }), /*#__PURE__*/_jsx(Login, {})]\n  });\n}\n\nconst mapStateToProps = state => {\n  var _state$common$user$da;\n\n  return {\n    signupData: state.common.signup,\n    userData: state.common.user,\n    isLogedIn: (_state$common$user$da = state.common.user.data) === null || _state$common$user$da === void 0 ? void 0 : _state$common$user$da.isLogedin\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  const {\n    login,\n    signup,\n    setLoginModel\n  } = commonActions;\n  return {\n    login: payload => dispatch(login(payload)),\n    signup: payload => dispatch(signup(payload)),\n    setLoginModel: payload => dispatch(setLoginModel(payload))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SecondaryHeader);","map":null,"metadata":{},"sourceType":"module"}