{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\nimport React from \"react\";\nimport axios from \"axios\";\nimport Products from \"../../Components/ProductList\";\nimport { API_URL } from \"../../config\";\n\nfunction ProductsPage({\n  products\n}) {\n  return /*#__PURE__*/_jsx(Products, {\n    products: products\n  });\n} // This function gets called at build time\n\n\nexport async function getStaticPaths() {\n  // Call an external API endpoint to get posts\n  const res = await axios({\n    method: \"get\",\n    url: API_URL + \"/common/categories\"\n  }).then(function (response) {\n    return response.data;\n  }).catch(function (error) {\n    return error;\n  });\n  const categories = await res.categories; // Get the paths we want to pre-render based on posts\n\n  const paths = [];\n  categories.forEach(category => {\n    if (category.value) {\n      paths.push({\n        params: {\n          tag: category.value\n        }\n      });\n    }\n  }); // We'll pre-render only these paths at build time.\n  // { fallback: false } means other routes should 404.\n\n  return {\n    paths,\n    fallback: false\n  };\n} // This also gets called at build time\n\nexport async function getStaticProps({\n  params\n}) {\n  // params contains the post `id`.\n  console.log(\"testtttttttttttttt\", params); // If the route is like /posts/1, then params.id is 1\n\n  const res = await axios({\n    method: \"get\",\n    url: API_URL + \"/feed/products\",\n    params: {\n      category_slug: params.tag\n    }\n  }).then(function (response) {\n    return response.data;\n  }).catch(function (error) {\n    return error;\n  });\n  const products = await res.products; // Pass post data to the page via props\n\n  return {\n    props: {\n      products\n    }\n  };\n}\nexport default ProductsPage;","map":null,"metadata":{},"sourceType":"module"}