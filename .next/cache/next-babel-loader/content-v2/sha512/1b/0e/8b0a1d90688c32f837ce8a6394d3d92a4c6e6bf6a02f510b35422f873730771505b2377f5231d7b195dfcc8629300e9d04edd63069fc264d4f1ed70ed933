{"ast":null,"code":"import _regeneratorRuntime from \"/home/mustkeem/Documents/My Projects/all-projects/woodenculture/frontend/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/mustkeem/Documents/My Projects/all-projects/woodenculture/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"/home/mustkeem/Documents/My Projects/all-projects/woodenculture/frontend/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _toConsumableArray from \"/home/mustkeem/Documents/My Projects/all-projects/woodenculture/frontend/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { createStore, applyMiddleware } from \"redux\";\nimport { HYDRATE, createWrapper } from \"next-redux-wrapper\";\nimport createSagaMiddleware, { END } from \"redux-saga\";\nimport rootReducer from \"./reducers\";\nimport rootSaga from \"./sagas\";\n\nvar bindMiddleware = function bindMiddleware(middleware) {\n  if (true) {\n    var _require = require(\"redux-devtools-extension\"),\n        composeWithDevTools = _require.composeWithDevTools;\n\n    return composeWithDevTools(applyMiddleware.apply(void 0, _toConsumableArray(middleware)));\n  }\n\n  return applyMiddleware.apply(void 0, _toConsumableArray(middleware));\n};\n\nvar reducer = function reducer(state, action) {\n  if (action.type === HYDRATE) {\n    var nextState = _objectSpread(_objectSpread({}, state), action.payload);\n\n    return nextState;\n  } else {\n    return rootReducer(state, action);\n  }\n}; // create the saga middleware\n\n\nvar sagaMiddleware = createSagaMiddleware();\n\nvar initStore = function initStore() {\n  var store = createStore(reducer, bindMiddleware([sagaMiddleware]));\n\n  store.runSaga = function () {\n    // Avoid running twice\n    if (store.saga) return;\n    store.saga = sagaMiddleware.run(rootSaga);\n  };\n\n  store.stopSaga = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (store.saga) {\n              _context.next = 2;\n              break;\n            }\n\n            return _context.abrupt(\"return\");\n\n          case 2:\n            store.dispatch(END);\n            _context.next = 5;\n            return store.saga.done;\n\n          case 5:\n            store.saga = null;\n\n          case 6:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  store.execSagaTasks = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(isServer, tasks) {\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              // run saga\n              store.runSaga(); // dispatch saga tasks\n\n              tasks(store.dispatch); // Stop running and wait for the tasks to be done\n\n              _context2.next = 4;\n              return store.stopSaga();\n\n            case 4:\n              // Re-run on client side\n              if (!isServer) {\n                store.runSaga();\n              }\n\n            case 5:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function (_x, _x2) {\n      return _ref2.apply(this, arguments);\n    };\n  }(); // Initial run\n\n\n  store.runSaga();\n  return store;\n};\n\nexport var wrapper = createWrapper(initStore);","map":{"version":3,"sources":["/home/mustkeem/Documents/My Projects/all-projects/woodenculture/frontend/store/store.js"],"names":["createStore","applyMiddleware","HYDRATE","createWrapper","createSagaMiddleware","END","rootReducer","rootSaga","bindMiddleware","middleware","require","composeWithDevTools","reducer","state","action","type","nextState","payload","sagaMiddleware","initStore","store","runSaga","saga","run","stopSaga","dispatch","done","execSagaTasks","isServer","tasks","wrapper"],"mappings":";;;;;;;;;AAAA,SAASA,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C;AACA,SAASC,OAAT,EAAkBC,aAAlB,QAAuC,oBAAvC;AAEA,OAAOC,oBAAP,IAA+BC,GAA/B,QAA0C,YAA1C;AAEA,OAAOC,WAAP,MAAwB,YAAxB;AACA,OAAOC,QAAP,MAAqB,SAArB;;AAEA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAACC,UAAD,EAAgB;AACrC,YAA2C;AAAA,mBACTC,OAAO,CAAC,0BAAD,CADE;AAAA,QACjCC,mBADiC,YACjCA,mBADiC;;AAEzC,WAAOA,mBAAmB,CAACV,eAAe,MAAf,4BAAmBQ,UAAnB,EAAD,CAA1B;AACD;;AACD,SAAOR,eAAe,MAAf,4BAAmBQ,UAAnB,EAAP;AACD,CAND;;AAQA,IAAMG,OAAO,GAAG,SAAVA,OAAU,CAACC,KAAD,EAAQC,MAAR,EAAmB;AACjC,MAAIA,MAAM,CAACC,IAAP,KAAgBb,OAApB,EAA6B;AAC3B,QAAMc,SAAS,mCACVH,KADU,GAEVC,MAAM,CAACG,OAFG,CAAf;;AAIA,WAAOD,SAAP;AACD,GAND,MAMO;AACL,WAAOV,WAAW,CAACO,KAAD,EAAQC,MAAR,CAAlB;AACD;AACF,CAVD,C,CAYA;;;AACA,IAAMI,cAAc,GAAGd,oBAAoB,EAA3C;;AAEA,IAAMe,SAAS,GAAG,SAAZA,SAAY,GAAM;AACtB,MAAMC,KAAK,GAAGpB,WAAW,CAACY,OAAD,EAAUJ,cAAc,CAAC,CAACU,cAAD,CAAD,CAAxB,CAAzB;;AAEAE,EAAAA,KAAK,CAACC,OAAN,GAAgB,YAAM;AACpB;AACA,QAAID,KAAK,CAACE,IAAV,EAAgB;AAChBF,IAAAA,KAAK,CAACE,IAAN,GAAaJ,cAAc,CAACK,GAAf,CAAmBhB,QAAnB,CAAb;AACD,GAJD;;AAMAa,EAAAA,KAAK,CAACI,QAAN,yEAAiB;AAAA;AAAA;AAAA;AAAA;AAAA,gBAEVJ,KAAK,CAACE,IAFI;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAGfF,YAAAA,KAAK,CAACK,QAAN,CAAepB,GAAf;AAHe;AAAA,mBAITe,KAAK,CAACE,IAAN,CAAWI,IAJF;;AAAA;AAKfN,YAAAA,KAAK,CAACE,IAAN,GAAa,IAAb;;AALe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAjB;;AAQAF,EAAAA,KAAK,CAACO,aAAN;AAAA,yEAAsB,kBAAOC,QAAP,EAAiBC,KAAjB;AAAA;AAAA;AAAA;AAAA;AACpB;AACAT,cAAAA,KAAK,CAACC,OAAN,GAFoB,CAGpB;;AACAQ,cAAAA,KAAK,CAACT,KAAK,CAACK,QAAP,CAAL,CAJoB,CAKpB;;AALoB;AAAA,qBAMdL,KAAK,CAACI,QAAN,EANc;;AAAA;AAOpB;AACA,kBAAI,CAACI,QAAL,EAAe;AACbR,gBAAAA,KAAK,CAACC,OAAN;AACD;;AAVmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAtB;;AAAA;AAAA;AAAA;AAAA,MAjBsB,CA8BtB;;;AACAD,EAAAA,KAAK,CAACC,OAAN;AAEA,SAAOD,KAAP;AACD,CAlCD;;AAoCA,OAAO,IAAMU,OAAO,GAAG3B,aAAa,CAACgB,SAAD,CAA7B","sourcesContent":["import { createStore, applyMiddleware } from \"redux\";\r\nimport { HYDRATE, createWrapper } from \"next-redux-wrapper\";\r\n\r\nimport createSagaMiddleware, { END } from \"redux-saga\";\r\n\r\nimport rootReducer from \"./reducers\";\r\nimport rootSaga from \"./sagas\";\r\n\r\nconst bindMiddleware = (middleware) => {\r\n  if (process.env.NODE_ENV !== \"production\") {\r\n    const { composeWithDevTools } = require(\"redux-devtools-extension\");\r\n    return composeWithDevTools(applyMiddleware(...middleware));\r\n  }\r\n  return applyMiddleware(...middleware);\r\n};\r\n\r\nconst reducer = (state, action) => {\r\n  if (action.type === HYDRATE) {\r\n    const nextState = {\r\n      ...state, // use previous state\r\n      ...action.payload, // apply delta from hydration\r\n    };\r\n    return nextState;\r\n  } else {\r\n    return rootReducer(state, action);\r\n  }\r\n};\r\n\r\n// create the saga middleware\r\nconst sagaMiddleware = createSagaMiddleware();\r\n\r\nconst initStore = () => {\r\n  const store = createStore(reducer, bindMiddleware([sagaMiddleware]));\r\n\r\n  store.runSaga = () => {\r\n    // Avoid running twice\r\n    if (store.saga) return;\r\n    store.saga = sagaMiddleware.run(rootSaga);\r\n  };\r\n\r\n  store.stopSaga = async () => {\r\n    // Avoid running twice\r\n    if (!store.saga) return;\r\n    store.dispatch(END);\r\n    await store.saga.done;\r\n    store.saga = null;\r\n  };\r\n\r\n  store.execSagaTasks = async (isServer, tasks) => {\r\n    // run saga\r\n    store.runSaga();\r\n    // dispatch saga tasks\r\n    tasks(store.dispatch);\r\n    // Stop running and wait for the tasks to be done\r\n    await store.stopSaga();\r\n    // Re-run on client side\r\n    if (!isServer) {\r\n      store.runSaga();\r\n    }\r\n  };\r\n\r\n  // Initial run\r\n  store.runSaga();\r\n\r\n  return store;\r\n};\r\n\r\nexport const wrapper = createWrapper(initStore);\r\n"]},"metadata":{},"sourceType":"module"}