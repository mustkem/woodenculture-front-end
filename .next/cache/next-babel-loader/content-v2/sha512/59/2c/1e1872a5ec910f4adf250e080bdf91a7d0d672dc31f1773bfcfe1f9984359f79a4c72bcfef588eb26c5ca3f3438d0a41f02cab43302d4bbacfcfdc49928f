{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport * as actions from \"./actions\";\nimport * as types from \"./types\";\nimport { commonReducer } from \"./reducers\";\nimport * as apis from \"./api\";\n\nconst commonApis = _objectSpread({}, apis);\n\nconst commonActions = _objectSpread({}, actions);\n\nconst commonTypes = _objectSpread({}, types);\n\nexport { commonApis, commonTypes, commonReducer };","map":{"version":3,"sources":["/home/mustkeem/Documents/My Projects/all-projects/woodenculture/frontend/store-thunk/common/index.js"],"names":["actions","types","commonReducer","apis","commonApis","commonActions","commonTypes"],"mappings":";;;;;;AAAA,OAAO,KAAKA,OAAZ,MAAyB,WAAzB;AACA,OAAO,KAAKC,KAAZ,MAAuB,SAAvB;AACA,SAASC,aAAT,QAA8B,YAA9B;AAEA,OAAO,KAAKC,IAAZ,MAAsB,OAAtB;;AAEA,MAAMC,UAAU,qBACXD,IADW,CAAhB;;AAIA,MAAME,aAAa,qBACdL,OADc,CAAnB;;AAIA,MAAMM,WAAW,qBACZL,KADY,CAAjB;;AAIA,SAASG,UAAT,EAAqBE,WAArB,EAAkCJ,aAAlC","sourcesContent":["import * as actions from \"./actions\";\r\nimport * as types from \"./types\";\r\nimport { commonReducer } from \"./reducers\";\r\n\r\nimport * as apis from \"./api\";\r\n\r\nconst commonApis = {\r\n  ...apis,\r\n};\r\n\r\nconst commonActions = {\r\n  ...actions,\r\n};\r\n\r\nconst commonTypes = {\r\n  ...types,\r\n};\r\n\r\nexport { commonApis, commonTypes, commonReducer };\r\n"]},"metadata":{},"sourceType":"module"}