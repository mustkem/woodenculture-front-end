{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/mustkeem/Documents/My Projects/all-projects/woodenculture/frontend/pages/products/[tag].js\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport Products from \"../../Components/ProductList\";\n\nfunction ProductsPage(_ref) {\n  var products = _ref.products;\n  return /*#__PURE__*/_jsxDEV(Products, {\n    products: products\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 10\n  }, this);\n} // This function gets called at build time\n\n\n_c = ProductsPage;\n\nvar mapStateToprops = function mapStateToprops(state) {\n  return {// products: [],\n  };\n};\n\nexport var __N_SSG = true;\nexport default connect(mapStateToprops)(ProductsPage);\n\nvar _c;\n\n$RefreshReg$(_c, \"ProductsPage\");","map":{"version":3,"sources":["/home/mustkeem/Documents/My Projects/all-projects/woodenculture/frontend/pages/products/[tag].js"],"names":["React","connect","Products","ProductsPage","products","mapStateToprops","state"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,OAAT,QAAwB,aAAxB;AAEA,OAAOC,QAAP,MAAqB,8BAArB;;AAOA,SAASC,YAAT,OAAoC;AAAA,MAAZC,QAAY,QAAZA,QAAY;AAClC,sBAAO,QAAC,QAAD;AAAU,IAAA,QAAQ,EAAEA;AAApB;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,C,CAED;;;KAJSD,Y;;AAgGT,IAAME,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD,EAAW;AACjC,SAAO,CACL;AADK,GAAP;AAGD,CAJD;;;AAMA,eAAeL,OAAO,CAACI,eAAD,CAAP,CAAyBF,YAAzB,CAAf","sourcesContent":["import React from \"react\";\nimport axios from \"axios\";\nimport { connect } from \"react-redux\";\n\nimport Products from \"../../Components/ProductList\";\n\nimport { wrapper as storeWrapper } from \"../../store-thunk/store\";\nimport { productsActions } from \"../../store-thunk/products\";\n\nimport { API_URL } from \"../../config\";\n\nfunction ProductsPage({ products }) {\n  return <Products products={products} />;\n}\n\n// This function gets called at build time\nexport async function getStaticPaths() {\n  // Call an external API endpoint to get posts\n  const res = await axios({\n    method: \"get\",\n    url: API_URL + \"/common/categories\",\n  })\n    .then(function (response) {\n      return response.data;\n    })\n    .catch(function (error) {\n      return error;\n    });\n  const categories = await res.categories;\n\n  // Get the paths we want to pre-render based on posts\n  const paths = [];\n  categories.forEach((category) => {\n    if (category.value) {\n      paths.push({\n        params: { tag: category.value },\n      });\n    }\n  });\n\n  // We'll pre-render only these paths at build time.\n  // { fallback: false } means other routes should 404.\n  return { paths, fallback: false };\n}\n\n// This also gets called at build time\n// export async function getStaticProps({ params }) {\n//   const res = await axios({\n//     method: \"get\",\n//     url: API_URL + \"/feed/products\",\n//     params: {\n//       category_slug: params.tag,\n//     },\n//   })\n//     .then(function (response) {\n//       return response.data;\n//     })\n//     .catch(function (error) {\n//       return error;\n//     });\n//   const products = await res.products;\n\n//   // Pass post data to the page via props\n//   return { props: { products } };\n// }\n\nexport const getStaticProps = storeWrapper.getStaticProps(async ({ params, store }) => {\n  // const res = await store.dispatch(\n  //   productsActions.fetchProducts({\n  //     params: {\n  //       category_slug: params.tag,\n  //     },\n  //   })\n  // );\n\n  const res = await axios({\n    method: \"get\",\n    url: API_URL + \"/feed/products\",\n    params: {\n      category_slug: params.tag,\n    },\n  })\n    .then(function (response) {\n      return response.data;\n    })\n    .catch(function (error) {\n      return error;\n    });\n  const products = await res.products;\n\n  //\n\n  console.log(\"eeeeeeeeeeeeeeeeeeeeee\", products);\n\n  // const products = await res.products;\n\n  await store.dispatch(\n    productsActions.fetchProducts({\n      params: {\n        category_slug: params.tag,\n      },\n    })\n  );\n\n  return { props: { products: [] } };\n});\n\nconst mapStateToprops = (state) => {\n  return {\n    // products: [],\n  };\n};\n\nexport default connect(mapStateToprops)(ProductsPage);\n"]},"metadata":{},"sourceType":"module"}