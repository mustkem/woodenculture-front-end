{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\woodenculture\\\\woodenculture-front-end\\\\pages\\\\products\\\\[tag].js\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport Products from \"../../Components/ProductList\";\nimport { productsActions } from \"../../store-thunk/products\";\n\nfunction ProductsPage(_ref) {\n  var products = _ref.products;\n  return /*#__PURE__*/_jsxDEV(Products, {\n    products: products\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 10\n  }, this);\n} // This function gets called at build time\n\n\n_c = ProductsPage;\n\nvar mapStateToprops = function mapStateToprops(state) {\n  var _state$products$fetch;\n\n  return {\n    products: (_state$products$fetch = state.products.fetchProducts.data) === null || _state$products$fetch === void 0 ? void 0 : _state$products$fetch.products\n  };\n};\n\nexport var __N_SSG = true;\nexport default connect(mapStateToprops)(ProductsPage);\n\nvar _c;\n\n$RefreshReg$(_c, \"ProductsPage\");","map":{"version":3,"sources":["C:/Users/Admin/Desktop/woodenculture/woodenculture-front-end/pages/products/[tag].js"],"names":["React","connect","Products","productsActions","ProductsPage","products","mapStateToprops","state","fetchProducts","data"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,OAAT,QAAwB,aAAxB;AAEA,OAAOC,QAAP,MAAqB,8BAArB;AAGA,SAASC,eAAT,QAA8C,4BAA9C;;AAIA,SAASC,YAAT,OAAoC;AAAA,MAAZC,QAAY,QAAZA,QAAY;AAClC,sBAAO,QAAC,QAAD;AAAU,IAAA,QAAQ,EAAEA;AAApB;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,C,CAED;;;KAJSD,Y;;AAiET,IAAME,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD,EAAW;AAAA;;AACjC,SAAO;AACLF,IAAAA,QAAQ,2BAAEE,KAAK,CAACF,QAAN,CAAeG,aAAf,CAA6BC,IAA/B,0DAAE,sBAAmCJ;AADxC,GAAP;AAGD,CAJD;;;AAMA,eAAeJ,OAAO,CAACK,eAAD,CAAP,CAAyBF,YAAzB,CAAf","sourcesContent":["import React from \"react\";\r\nimport axios from \"axios\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport Products from \"../../Components/ProductList\";\r\n\r\nimport { wrapper as storeWrapper } from \"../../store-thunk/store\";\r\nimport { productsActions, productsApis } from \"../../store-thunk/products\";\r\n\r\nimport { API_URL } from \"../../config\";\r\n\r\nfunction ProductsPage({ products }) {\r\n  return <Products products={products} />;\r\n}\r\n\r\n// This function gets called at build time\r\nexport async function getStaticPaths() {\r\n  // Call an external API endpoint to get posts\r\n  const res = await axios({\r\n    method: \"get\",\r\n    url: API_URL + \"/common/categories\",\r\n  })\r\n    .then(function (response) {\r\n      return response.data;\r\n    })\r\n    .catch(function (error) {\r\n      return error;\r\n    });\r\n  const categories = await res.categories;\r\n\r\n  // Get the paths we want to pre-render based on posts\r\n  const paths = [];\r\n  categories.forEach((category) => {\r\n    if (category.value) {\r\n      paths.push({\r\n        params: { tag: category.value },\r\n      });\r\n    }\r\n  });\r\n\r\n  // We'll pre-render only these paths at build time.\r\n  // { fallback: false } means other routes should 404.\r\n  return { paths, fallback: false };\r\n}\r\n\r\n// This also gets called at build time\r\n// export async function getStaticProps({ params }) {\r\n//   const res = await axios({\r\n//     method: \"get\",\r\n//     url: API_URL + \"/feed/products\",\r\n//     params: {\r\n//       category_slug: params.tag,\r\n//     },\r\n//   })\r\n//     .then(function (response) {\r\n//       return response.data;\r\n//     })\r\n//     .catch(function (error) {\r\n//       return error;\r\n//     });\r\n//   const products = await res.products;\r\n\r\n//   // Pass post data to the page via props\r\n//   return { props: { products } };\r\n// }\r\n\r\nexport const getStaticProps = storeWrapper.getStaticProps(async ({ params, store }) => {\r\n  await store.dispatch(\r\n    productsApis.fetchProducts({\r\n      category_slug: params.tag,\r\n    })\r\n  );\r\n\r\n  return { props: { products: store.getState().products.fetchProducts.data?.products } };\r\n});\r\n\r\nconst mapStateToprops = (state) => {\r\n  return {\r\n    products: state.products.fetchProducts.data?.products,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToprops)(ProductsPage);\r\n"]},"metadata":{},"sourceType":"module"}